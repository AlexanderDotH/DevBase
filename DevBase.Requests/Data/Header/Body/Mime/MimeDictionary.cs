namespace DevBase.Requests.Data.Header.Body.Mime;

public class MimeDictionary : Lazy<Dictionary<string, ReadOnlyMemory<char>>>
{
    private static readonly ReadOnlyMemory<char> DefaultMimeType = "application/octet-stream".AsMemory();
    
    // Repeating mime-types
    private static readonly ReadOnlyMemory<char> PlainTextMimeType = "text/plain".AsMemory();
    private static readonly ReadOnlyMemory<char> HtmlTextMimeType = "text/html".AsMemory();
    private static readonly ReadOnlyMemory<char> XmlTextMimeType = "text/xml".AsMemory();
    private static readonly ReadOnlyMemory<char> CalendarTextMimeType = "text/calendar".AsMemory();
    private static readonly ReadOnlyMemory<char> XHtmlInsertionTextMimeType = "text/x-html-insertion".AsMemory();
    private static readonly ReadOnlyMemory<char> ScriptletTextMimeType = "text/scriptlet".AsMemory();
    
    private static readonly ReadOnlyMemory<char> MpegVideoMimeType = "video/mpeg".AsMemory();
    private static readonly ReadOnlyMemory<char> Mp4VideoMimeType = "video/mp4".AsMemory();
    private static readonly ReadOnlyMemory<char> ThreeGppVideoMimeType = "video/3gpp".AsMemory();
    private static readonly ReadOnlyMemory<char> ThreeGpp2VideoMimeType = "video/3gpp2".AsMemory();
    private static readonly ReadOnlyMemory<char> XmsAsfVideoMimeType = "video/x-ms-asf".AsMemory();
    private static readonly ReadOnlyMemory<char> QuickTimeVideoMimeType = "video/quicktime".AsMemory();
    private static readonly ReadOnlyMemory<char> DlnaMpegTtsVideoMimeType = "video/vnd.dlna.mpeg-tts".AsMemory();
    private static readonly ReadOnlyMemory<char> XlaAsfVideoMimeType = "video/x-la-asf".AsMemory();
    private static readonly ReadOnlyMemory<char> XdvVideoMimeType = "video/x-dv".AsMemory();
    
    private static readonly ReadOnlyMemory<char> QuickTimeImageMimeType = "image/x-quicktime".AsMemory();
    private static readonly ReadOnlyMemory<char> BitmapImageMimeType = "image/bmp".AsMemory();
    private static readonly ReadOnlyMemory<char> JpegImageMimeType = "image/jpeg".AsMemory();
    private static readonly ReadOnlyMemory<char> PngImageMimeType = "image/png".AsMemory();
    private static readonly ReadOnlyMemory<char> TiffImageMimeType = "image/tiff".AsMemory();
    private static readonly ReadOnlyMemory<char> MacPaintImageMimeType = "image/x-macpaint".AsMemory();
    private static readonly ReadOnlyMemory<char> PictImageMimeType = "image/pict".AsMemory();
    
    private static readonly ReadOnlyMemory<char> OggAudioMimeType = "audio/ogg".AsMemory();
    private static readonly ReadOnlyMemory<char> AacAudioMimeType = "audio/aac".AsMemory();
    private static readonly ReadOnlyMemory<char> WavAudioMimeType = "audio/wav".AsMemory();
    private static readonly ReadOnlyMemory<char> XsmdAudioMimeType = "audio/x-smd".AsMemory();
    private static readonly ReadOnlyMemory<char> AiffAudioMimeType = "audio/aiff".AsMemory();
    private static readonly ReadOnlyMemory<char> MpegUrlAudioMimeType = "audio/x-mpegurl".AsMemory();
    private static readonly ReadOnlyMemory<char> PnRealAudioMimeType = "audio/x-pn-realaudio".AsMemory();
    private static readonly ReadOnlyMemory<char> MidAudioMimeType = "audio/mid".AsMemory();
    private static readonly ReadOnlyMemory<char> BasicAudioMimeType = "audio/basic".AsMemory();
    
    private static readonly ReadOnlyMemory<char> WordMimeType = "application/msword".AsMemory();
    private static readonly ReadOnlyMemory<char> VisioMimeType = "application/vnd.visio".AsMemory();
    private static readonly ReadOnlyMemory<char> ExcelMimeType = "application/vnd.ms-excel".AsMemory();
    private static readonly ReadOnlyMemory<char> OneNoteMimeType = "application/onenote".AsMemory();
    private static readonly ReadOnlyMemory<char> PowerPointMimeType = "application/vnd.ms-powerpoint".AsMemory();
    private static readonly ReadOnlyMemory<char> AccessMimeType = "application/msaccess".AsMemory();
    private static readonly ReadOnlyMemory<char> WorksMimeType = "application/vnd.ms-works".AsMemory();
    private static readonly ReadOnlyMemory<char> OutlookMimeType = "application/vnd.ms-outlook".AsMemory();
    
    private static readonly ReadOnlyMemory<char> PerfmonMimeType = "application/x-perfmon".AsMemory();
    private static readonly ReadOnlyMemory<char> StepMimeType = "application/step".AsMemory();
    
    private static readonly ReadOnlyMemory<char> TexInfoMimeType = "application/x-texinfo".AsMemory();

    private static readonly ReadOnlyMemory<char> XmlMimeType = "application/xml".AsMemory();
    private static readonly ReadOnlyMemory<char> XHtmlMimeType = "application/xhtml+xml".AsMemory();
    
    private static readonly ReadOnlyMemory<char> CaCertX509MimeType = "application/x-x509-ca-cert".AsMemory();
    private static readonly ReadOnlyMemory<char> Pkcs7MimeType = "application/pkcs7-mime".AsMemory();
    private static readonly ReadOnlyMemory<char> Pkcs7CertificatesMimeType = "application/x-pkcs7-certificates".AsMemory();
    private static readonly ReadOnlyMemory<char> Pkcs12MimeType = "application/x-pkcs12".AsMemory();
    private static readonly ReadOnlyMemory<char> MediaViewMimeType = "application/x-msmediaview".AsMemory();
    private static readonly ReadOnlyMemory<char> LiquidMotionMimeType = "application/liquidmotion".AsMemory();
    private static readonly ReadOnlyMemory<char> XDirectorMimeType = "application/x-director".AsMemory();
    private static readonly ReadOnlyMemory<char> PostscriptMimeType = "application/postscript".AsMemory();
    private static readonly ReadOnlyMemory<char> FharpScriptMimeType = "application/fsharp-script".AsMemory();
    private static readonly ReadOnlyMemory<char> InternetSignupMimeType = "application/x-internet-signup".AsMemory();
    private static readonly ReadOnlyMemory<char> ShockwaveFlashMimeType = "application/x-shockwave-flash".AsMemory();
    private static readonly ReadOnlyMemory<char> TroffFlashMimeType = "application/x-troff".AsMemory();
    private static readonly ReadOnlyMemory<char> SfntFlashMimeType = "application/font-sfnt".AsMemory();

    private static readonly ReadOnlyMemory<char> VrmlWorldMimeType = "x-world/x-vrml".AsMemory();
    
    private static readonly ReadOnlyMemory<char> Rfc822MessageMimeType = "message/rfc822".AsMemory();

    public MimeDictionary() : base(() => new Dictionary<string, ReadOnlyMemory<char>>
    {
        { "*", "*/*".AsMemory() },
        { "aac", AacAudioMimeType },
        { "adts", AacAudioMimeType },
        { "apng", "image/apng".AsMemory() },
        { "avif", "image/avif".AsMemory() },
        { "avi", "video/x-msvideo".AsMemory() },
        { "bmp", BitmapImageMimeType },
        { "dib", BitmapImageMimeType },
        { "cdf", "application/x-cdf".AsMemory() },
        { "csh", "application/x-csh".AsMemory() },
        { "css", "text/css".AsMemory() },
        { "csv", "text/csv".AsMemory() },
        { "doc", WordMimeType },
        { "dot", WordMimeType },
        { "wbk", WordMimeType },
        { "wiz", WordMimeType },
        { "docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document".AsMemory() },
        { "eot", "application/vnd.ms-fontobject".AsMemory() },
        { "gif", "image/gif".AsMemory() },
        { "htm", HtmlTextMimeType },
        { "html", HtmlTextMimeType },
        { "hxt", HtmlTextMimeType },
        { "shtml", HtmlTextMimeType },
        { "ical", CalendarTextMimeType },
        { "icalendar", CalendarTextMimeType },
        { "ics", CalendarTextMimeType },
        { "ifb", CalendarTextMimeType },
        { "jar", "application/java-archive".AsMemory() },
        { "jpe", JpegImageMimeType },
        { "jpeg", JpegImageMimeType },
        { "jpg", JpegImageMimeType },
        { "json", "application/json".AsMemory() },
        { "mp3", "audio/mpeg".AsMemory() },
        { "f4v", Mp4VideoMimeType },
        { "mp4", Mp4VideoMimeType },
        { "mp4v", Mp4VideoMimeType },
        { "m1v", MpegVideoMimeType },
        { "m2v", MpegVideoMimeType },
        { "mod", MpegVideoMimeType },
        { "mp2", MpegVideoMimeType },
        { "mp2v", MpegVideoMimeType },
        { "mpa", MpegVideoMimeType },
        { "mpe", MpegVideoMimeType },
        { "mpeg", MpegVideoMimeType },
        { "mpg", MpegVideoMimeType },
        { "mpv2", MpegVideoMimeType },
        { "vbk", MpegVideoMimeType },
        { "odp", "application/vnd.oasis.opendocument.presentation".AsMemory() },
        { "ods", "application/vnd.oasis.opendocument.spreadsheet".AsMemory() },
        { "odt", "application/vnd.oasis.opendocument.text".AsMemory() },
        { "oga", OggAudioMimeType },
        { "ogg", OggAudioMimeType },
        { "opus", OggAudioMimeType },
        { "spx", OggAudioMimeType },
        { "ogv", "video/ogg".AsMemory() },
        { "ogx", "application/ogg".AsMemory() },
        { "png", PngImageMimeType },
        { "pnz", PngImageMimeType },
        { "pdf", "application/pdf".AsMemory() },
        { "pot", PowerPointMimeType },
        { "ppa", PowerPointMimeType },
        { "pps", PowerPointMimeType },
        { "ppt", PowerPointMimeType },
        { "pwz", PowerPointMimeType },
        { "pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation".AsMemory() },
        { "rtf", "application/rtf".AsMemory() },
        { "sh", "application/x-sh".AsMemory() },
        { "svg", "image/svg+xml".AsMemory() },
        { "tar", "application/x-tar".AsMemory() },
        { "tif", TiffImageMimeType },
        { "tiff", TiffImageMimeType },
        { "asm", PlainTextMimeType },
        { "bas", PlainTextMimeType },
        { "c", PlainTextMimeType },
        { "cc", PlainTextMimeType },
        { "cd", PlainTextMimeType },
        { "cfg", PlainTextMimeType },
        { "cmd", PlainTextMimeType },
        { "cnf", PlainTextMimeType },
        { "cpp", PlainTextMimeType },
        { "cs", PlainTextMimeType },
        { "csdproj", PlainTextMimeType },
        { "csproj", PlainTextMimeType },
        { "cxx", PlainTextMimeType },
        { "dbproj", PlainTextMimeType },
        { "def", PlainTextMimeType },
        { "dsw", PlainTextMimeType },
        { "h", PlainTextMimeType },
        { "hpp", PlainTextMimeType },
        { "hxx", PlainTextMimeType },
        { "i", PlainTextMimeType },
        { "idl", PlainTextMimeType },
        { "inc", PlainTextMimeType },
        { "ini", PlainTextMimeType },
        { "inl", PlainTextMimeType },
        { "ipproj", PlainTextMimeType },
        { "jsxbin", PlainTextMimeType },
        { "lst", PlainTextMimeType },
        { "mak", PlainTextMimeType },
        { "map", PlainTextMimeType },
        { "mk", PlainTextMimeType },
        { "odh", PlainTextMimeType },
        { "odl", PlainTextMimeType },
        { "pkgdef", PlainTextMimeType },
        { "pkgundef", PlainTextMimeType },
        { "rc", PlainTextMimeType },
        { "rc2", PlainTextMimeType },
        { "rct", PlainTextMimeType },
        { "reg", PlainTextMimeType },
        { "rgs", PlainTextMimeType },
        { "s", PlainTextMimeType },
        { "scr", PlainTextMimeType },
        { "sln", PlainTextMimeType },
        { "sol", PlainTextMimeType },
        { "sor", PlainTextMimeType },
        { "srf", PlainTextMimeType },
        { "tlh", PlainTextMimeType },
        { "tli", PlainTextMimeType },
        { "txt", PlainTextMimeType },
        { "user", PlainTextMimeType },
        { "vb", PlainTextMimeType },
        { "vbdproj", PlainTextMimeType },
        { "vbproj", PlainTextMimeType },
        { "vcs", PlainTextMimeType },
        { "vddproj", PlainTextMimeType },
        { "vdp", PlainTextMimeType },
        { "vdproj", PlainTextMimeType },
        { "vspscc", PlainTextMimeType },
        { "vsscc", PlainTextMimeType },
        { "vssscc", PlainTextMimeType },
        { "xdr", PlainTextMimeType },
        { "XOML", PlainTextMimeType },
        { "vsd", VisioMimeType },
        { "vss", VisioMimeType },
        { "vst", VisioMimeType },
        { "vsw", VisioMimeType },
        { "vsx", VisioMimeType },
        { "vtx", VisioMimeType },
        { "wav", WavAudioMimeType },
        { "wave", WavAudioMimeType },
        { "webm", "video/webm".AsMemory() },
        { "xht", XHtmlMimeType },
        { "xhtml", XHtmlMimeType },
        { "slk", ExcelMimeType },
        { "xla", ExcelMimeType },
        { "xlc", ExcelMimeType },
        { "xld", ExcelMimeType },
        { "xlk", ExcelMimeType },
        { "xll", ExcelMimeType },
        { "xlm", ExcelMimeType },
        { "xls", ExcelMimeType },
        { "xlt", ExcelMimeType },
        { "xlw", ExcelMimeType },
        { "xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet".AsMemory() },
        { "asa", XmlMimeType },
        { "asax", XmlMimeType },
        { "ascx", XmlMimeType },
        { "ashx", XmlMimeType },
        { "asmx", XmlMimeType },
        { "aspx", XmlMimeType },
        { "config", XmlMimeType },
        { "coverage", XmlMimeType },
        { "datasource", XmlMimeType },
        { "dgml", XmlMimeType },
        { "filters", XmlMimeType },
        { "generictest", XmlMimeType },
        { "hxa", XmlMimeType },
        { "hxc", XmlMimeType },
        { "hxe", XmlMimeType },
        { "hxf", XmlMimeType },
        { "hxk", XmlMimeType },
        { "hxv", XmlMimeType },
        { "loadtest", XmlMimeType },
        { "master", XmlMimeType },
        { "mtx", XmlMimeType },
        { "orderedtest", XmlMimeType },
        { "psess", XmlMimeType },
        { "rdlc", XmlMimeType },
        { "resx", XmlMimeType },
        { "ruleset", XmlMimeType },
        { "settings", XmlMimeType },
        { "sitemap", XmlMimeType },
        { "skin", XmlMimeType },
        { "snippet", XmlMimeType },
        { "svc", XmlMimeType },
        { "testrunconfig", XmlMimeType },
        { "testsettings", XmlMimeType },
        { "trx", XmlMimeType },
        { "vcproj", XmlMimeType },
        { "vcxproj", XmlMimeType },
        { "vscontent", XmlMimeType },
        { "vsmdi", XmlMimeType },
        { "webtest", XmlMimeType },
        { "wiq", XmlMimeType },
        { "xmta", XmlMimeType },
        { "xsc", XmlMimeType },
        { "xss", XmlMimeType },
        { "zip", "application/zip".AsMemory() },
        { "3gp", ThreeGppVideoMimeType },
        { "3gpp", ThreeGppVideoMimeType },
        { "3g2", ThreeGpp2VideoMimeType },
        { "3gp2", ThreeGpp2VideoMimeType },
        { "7z", "application/x-7z-compressed".AsMemory() },
        { "323", "text/h323".AsMemory() },
        { "aa", "audio/audible".AsMemory() },
        { "aax", "audio/vnd.audible.aax".AsMemory() },
        { "ac3", "audio/ac3".AsMemory() },
        { "accda", "application/msaccess.addin".AsMemory() },
        { "accdb", AccessMimeType },
        { "accdc", "application/msaccess.cab".AsMemory() },
        { "accde", AccessMimeType },
        { "accdr", "application/msaccess.runtime".AsMemory() },
        { "accdt", AccessMimeType },
        { "accdw", "application/msaccess.webapplication".AsMemory() },
        { "accft", "application/msaccess.ftemplate".AsMemory() },
        { "acx", "application/internet-property-stream".AsMemory() },
        { "AddIn", XmlTextMimeType },
        { "ade", AccessMimeType },
        { "adobebridge", "application/x-bridge-url".AsMemory() },
        { "adp", AccessMimeType },
        { "ADT", "audio/vnd.dlna.adts".AsMemory() },
        { "ai", PostscriptMimeType },
        { "aif", AiffAudioMimeType },
        { "aifc", AiffAudioMimeType },
        { "aiff", AiffAudioMimeType },
        { "air", "application/vnd.adobe.air-application-installer-package+zip".AsMemory() },
        { "amc", "application/mpeg".AsMemory() },
        { "anx", "application/annodex".AsMemory() },
        { "apk", "application/vnd.android.package-archive".AsMemory() },
        { "application", "application/x-ms-application".AsMemory() },
        { "art", "image/x-jg".AsMemory() },
        { "asf", XmsAsfVideoMimeType },
        { "asr", XmsAsfVideoMimeType },
        { "asx", XmsAsfVideoMimeType },
        { "atom", "application/atom+xml".AsMemory() },
        { "au", BasicAudioMimeType },
        { "avci", "image/avci".AsMemory() },
        { "avcs", "image/avcs".AsMemory() },
        { "avifs", "image/avif-sequence".AsMemory() },
        { "axa", "audio/annodex".AsMemory() },
        { "axs", "application/olescript".AsMemory() },
        { "axv", "video/annodex".AsMemory() },
        { "bcpio", "application/x-bcpio".AsMemory() },
        { "caf", "audio/x-caf".AsMemory() },
        { "calx", "application/vnd.ms-office.calx".AsMemory() },
        { "cat", "application/vnd.ms-pki.seccat".AsMemory() },
        { "cdda", AiffAudioMimeType },
        { "cer", CaCertX509MimeType },
        { "class", "application/x-java-applet".AsMemory() },
        { "clp", "application/x-msclip".AsMemory() },
        { "cmx", "image/x-cmx".AsMemory() },
        { "cod", "image/cis-cod".AsMemory() },
        { "contact", "text/x-ms-contact".AsMemory() },
        { "cpio", "application/x-cpio".AsMemory() },
        { "crd", "application/x-mscardfile".AsMemory() },
        { "crl", "application/pkix-crl".AsMemory() },
        { "crt", CaCertX509MimeType },
        { "czx", "application/x-czx".AsMemory() },
        { "dcr", XDirectorMimeType },
        { "der", CaCertX509MimeType },
        { "dif", XdvVideoMimeType },
        { "dir", XDirectorMimeType },
        { "disco", XmlTextMimeType },
        { "divx", "video/divx".AsMemory() },
        { "dll", "application/x-msdownload".AsMemory() },
        { "dll.config", XmlTextMimeType },
        { "dlm", "text/dlm".AsMemory() },
        { "docm", "application/vnd.ms-word.document.macroEnabled.12".AsMemory() },
        { "dotm", "application/vnd.ms-word.template.macroEnabled.12".AsMemory() },
        { "dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template".AsMemory() },
        { "dtd", XmlTextMimeType },
        { "dtsConfig", XmlTextMimeType },
        { "dv", XdvVideoMimeType },
        { "dvi", "application/x-dvi".AsMemory() },
        { "dwf", "drawing/x-dwf".AsMemory() },
        { "dwg", "application/acad".AsMemory() },
        { "dxf", "application/x-dxf".AsMemory() },
        { "dxr", XDirectorMimeType },
        { "eml", Rfc822MessageMimeType },
        { "emf", "image/emf".AsMemory() },
        { "eps", PostscriptMimeType },
        { "es", "application/ecmascript".AsMemory() },
        { "etl", "application/etl".AsMemory() },
        { "etx", "text/x-setext".AsMemory() },
        { "evy", "application/envoy".AsMemory() },
        { "exe", "application/vnd.microsoft.portable-executable".AsMemory() },
        { "exe.config", XmlTextMimeType },
        { "fdf", "application/vnd.fdf".AsMemory() },
        { "fif", "application/fractals".AsMemory() },
        { "flac", "audio/flac".AsMemory() },
        { "flr", VrmlWorldMimeType },
        { "flv", "video/x-flv".AsMemory() },
        { "fsscript", FharpScriptMimeType },
        { "fsx", FharpScriptMimeType },
        { "geojson", "application/geo+json".AsMemory() },
        { "gpx", "application/gpx+xml".AsMemory() },
        { "group", "text/x-ms-group".AsMemory() },
        { "gsm", "audio/x-gsm".AsMemory() },
        { "gtar", "application/x-gtar".AsMemory() },
        { "gz", "application/x-gzip".AsMemory() },
        { "hdf", "application/x-hdf".AsMemory() },
        { "hdml", "text/x-hdml".AsMemory() },
        { "heic", "image/heic".AsMemory() },
        { "heics", "image/heic-sequence".AsMemory() },
        { "heif", "image/heif".AsMemory() },
        { "heifs", "image/heif-sequence".AsMemory() },
        { "hhc", "application/x-oleobject".AsMemory() },
        { "hlp", "application/winhlp".AsMemory() },
        { "hqx", "application/mac-binhex40".AsMemory() },
        { "hta", "application/hta".AsMemory() },
        { "htc", "text/x-component".AsMemory() },
        { "htt", "text/webviewhtml".AsMemory() },
        { "ico", "image/x-icon".AsMemory() },
        { "ief", "image/ief".AsMemory() },
        { "iii", "application/x-iphone".AsMemory() },
        { "ins", InternetSignupMimeType },
        { "ipa", "application/x-itunes-ipa".AsMemory() },
        { "ipg", "application/x-itunes-ipg".AsMemory() },
        { "ipsw", "application/x-itunes-ipsw".AsMemory() },
        { "iqy", "text/x-ms-iqy".AsMemory() },
        { "isp", InternetSignupMimeType },
        { "ite", "application/x-itunes-ite".AsMemory() },
        { "itlp", "application/x-itunes-itlp".AsMemory() },
        { "itms", "application/x-itunes-itms".AsMemory() },
        { "itpc", "application/x-itunes-itpc".AsMemory() },
        { "IVF", "video/x-ivf".AsMemory() },
        { "jck", LiquidMotionMimeType },
        { "jcz", LiquidMotionMimeType },
        { "jfif", "image/pjpeg".AsMemory() },
        { "jnlp", "application/x-java-jnlp-file".AsMemory() },
        { "js", "application/javascript".AsMemory() },
        { "jsx", "text/jscript".AsMemory() },
        { "key", "application/vnd.apple.keynote".AsMemory() },
        { "latex", "application/x-latex".AsMemory() },
        { "library-ms", "application/windows-library+xml".AsMemory() },
        { "lit", "application/x-ms-reader".AsMemory() },
        { "lsf", XlaAsfVideoMimeType },
        { "lsx", XlaAsfVideoMimeType },
        { "m13", MediaViewMimeType },
        { "m14", MediaViewMimeType },
        { "m2t", DlnaMpegTtsVideoMimeType },
        { "m2ts", DlnaMpegTtsVideoMimeType },
        { "m3u", MpegUrlAudioMimeType },
        { "m3u8", MpegUrlAudioMimeType },
        { "m4a", "audio/m4a".AsMemory() },
        { "m4b", "audio/m4b".AsMemory() },
        { "m4p", "audio/m4p".AsMemory() },
        { "m4r", "audio/x-m4r".AsMemory() },
        { "m4v", "video/x-m4v".AsMemory() },
        { "mac", MacPaintImageMimeType },
        { "man", "application/x-troff-man".AsMemory() },
        { "manifest", "application/x-ms-manifest".AsMemory() },
        { "mbox", "application/mbox".AsMemory() },
        { "mda", AccessMimeType },
        { "mdb", "application/x-msaccess".AsMemory() },
        { "mde", AccessMimeType },
        { "me", "application/x-troff-me".AsMemory() },
        { "mfp", ShockwaveFlashMimeType },
        { "mht", Rfc822MessageMimeType },
        { "mhtml", Rfc822MessageMimeType },
        { "mid", MidAudioMimeType },
        { "midi", MidAudioMimeType },
        { "mk3d", "video/x-matroska-3d".AsMemory() },
        { "mka", "audio/x-matroska".AsMemory() },
        { "mkv", "video/x-matroska".AsMemory() },
        { "mmf", "application/x-smaf".AsMemory() },
        { "mno", XmlTextMimeType },
        { "mny", "application/x-msmoney".AsMemory() },
        { "mov", QuickTimeVideoMimeType },
        { "movie", "video/x-sgi-movie".AsMemory() },
        { "mpf", "application/vnd.ms-mediapackage".AsMemory() },
        { "mpp", "application/vnd.ms-project".AsMemory() },
        { "mqv", QuickTimeVideoMimeType },
        { "ms", "application/x-troff-ms".AsMemory() },
        { "msg", OutlookMimeType },
        { "mts", DlnaMpegTtsVideoMimeType },
        { "mvb", MediaViewMimeType },
        { "mvc", "application/x-miva-compiled".AsMemory() },
        { "mxf", "application/mxf".AsMemory() },
        { "mxp", "application/x-mmxp".AsMemory() },
        { "nc", "application/x-netcdf".AsMemory() },
        { "nsc", XmsAsfVideoMimeType },
        { "numbers", "application/vnd.apple.numbers".AsMemory() },
        { "nws", Rfc822MessageMimeType },
        { "oda", "application/oda".AsMemory() },
        { "odb", "application/vnd.oasis.opendocument.database".AsMemory() },
        { "odc", "application/vnd.oasis.opendocument.chart".AsMemory() },
        { "odf", "application/vnd.oasis.opendocument.formula".AsMemory() },
        { "odg", "application/vnd.oasis.opendocument.graphics".AsMemory() },
        { "odi", "application/vnd.oasis.opendocument.image".AsMemory() },
        { "odm", "application/vnd.oasis.opendocument.text-master".AsMemory() },
        { "one", OneNoteMimeType },
        { "onea", OneNoteMimeType },
        { "onepkg", OneNoteMimeType },
        { "onetmp", OneNoteMimeType },
        { "onetoc", OneNoteMimeType },
        { "onetoc2", OneNoteMimeType },
        { "osdx", "application/opensearchdescription+xml".AsMemory() },
        { "otf", SfntFlashMimeType },
        { "otg", "application/vnd.oasis.opendocument.graphics-template".AsMemory() },
        { "oth", "application/vnd.oasis.opendocument.text-web".AsMemory() },
        { "otp", "application/vnd.oasis.opendocument.presentation-template".AsMemory() },
        { "ots", "application/vnd.oasis.opendocument.spreadsheet-template".AsMemory() },
        { "ott", "application/vnd.oasis.opendocument.text-template".AsMemory() },
        { "oxps", "application/oxps".AsMemory() },
        { "oxt", "application/vnd.openofficeorg.extension".AsMemory() },
        { "p10", "application/pkcs10".AsMemory() },
        { "p12", Pkcs12MimeType },
        { "p7b", Pkcs7CertificatesMimeType },
        { "p7c", Pkcs7MimeType },
        { "p7m", Pkcs7MimeType },
        { "p7r", "application/x-pkcs7-certreqresp".AsMemory() },
        { "p7s", "application/pkcs7-signature".AsMemory() },
        { "pages", "application/vnd.apple.pages".AsMemory() },
        { "pbm", "image/x-portable-bitmap".AsMemory() },
        { "pcast", "application/x-podcast".AsMemory() },
        { "pct", PictImageMimeType },
        { "pfx", Pkcs12MimeType },
        { "pgm", "image/x-portable-graymap".AsMemory() },
        { "pic", PictImageMimeType },
        { "pict", PictImageMimeType },
        { "pko", "application/vnd.ms-pki.pko".AsMemory() },
        { "pls", "audio/scpls".AsMemory() },
        { "pma", PerfmonMimeType },
        { "pmc", PerfmonMimeType },
        { "pml", PerfmonMimeType },
        { "pmr", PerfmonMimeType },
        { "pmw", PerfmonMimeType },
        { "pnm", "image/x-portable-anymap".AsMemory() },
        { "pnt", MacPaintImageMimeType },
        { "pntg", MacPaintImageMimeType },
        { "potm", "application/vnd.ms-powerpoint.template.macroEnabled.12".AsMemory() },
        { "potx", "application/vnd.openxmlformats-officedocument.presentationml.template".AsMemory() },
        { "ppam", "application/vnd.ms-powerpoint.addin.macroEnabled.12".AsMemory() },
        { "ppm", "image/x-portable-pixmap".AsMemory() },
        { "ppsm", "application/vnd.ms-powerpoint.slideshow.macroEnabled.12".AsMemory() },
        { "ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow".AsMemory() },
        { "pptm", "application/vnd.ms-powerpoint.presentation.macroEnabled.12".AsMemory() },
        { "prf", "application/pics-rules".AsMemory() },
        { "ps", PostscriptMimeType },
        { "psc1", "application/PowerShell".AsMemory() },
        { "pst", OutlookMimeType },
        { "pub", "application/x-mspublisher".AsMemory() },
        { "qht", XHtmlInsertionTextMimeType },
        { "qhtm", XHtmlInsertionTextMimeType },
        { "qt", QuickTimeVideoMimeType },
        { "qti", QuickTimeImageMimeType },
        { "qtif", QuickTimeImageMimeType },
        { "qtl", "application/x-quicktimeplayer".AsMemory() },
        { "ra", PnRealAudioMimeType },
        { "ram", PnRealAudioMimeType },
        { "rar", "application/x-rar-compressed".AsMemory() },
        { "ras", "image/x-cmu-raster".AsMemory() },
        { "rat", "application/rat-file".AsMemory() },
        { "rf", "image/vnd.rn-realflash".AsMemory() },
        { "rgb", "image/x-rgb".AsMemory() },
        { "rm", "application/vnd.rn-realmedia".AsMemory() },
        { "rmi", MidAudioMimeType },
        { "rmp", "application/vnd.rn-rn_music_package".AsMemory() },
        { "rmvb", "application/vnd.rn-realmedia-vbr".AsMemory() },
        { "roff", TroffFlashMimeType },
        { "rpm", "audio/x-pn-realaudio-plugin".AsMemory() },
        { "rqy", "text/x-ms-rqy".AsMemory() },
        { "rtx", "text/richtext".AsMemory() },
        { "safariextz", "application/x-safari-safariextz".AsMemory() },
        { "scd", "application/x-msschedule".AsMemory() },
        { "sct", ScriptletTextMimeType },
        { "sd2", "audio/x-sd2".AsMemory() },
        { "sdp", "application/sdp".AsMemory() },
        { "searchConnector-ms", "application/windows-search-connector+xml".AsMemory() },
        { "setpay", "application/set-payment-initiation".AsMemory() },
        { "setreg", "application/set-registration-initiation".AsMemory() },
        { "sgimb", "application/x-sgimb".AsMemory() },
        { "sgml", "text/sgml".AsMemory() },
        { "shar", "application/x-shar".AsMemory() },
        { "sit", "application/x-stuffit".AsMemory() },
        { "skp", "application/x-koan".AsMemory() },
        { "sldm", "application/vnd.ms-powerpoint.slide.macroEnabled.12".AsMemory() },
        { "sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide".AsMemory() },
        { "slupkg-ms", "application/x-ms-license".AsMemory() },
        { "smd", XsmdAudioMimeType },
        { "smx", XsmdAudioMimeType },
        { "smz", XsmdAudioMimeType },
        { "snd", BasicAudioMimeType },
        { "sql", "application/sql".AsMemory() },
        { "spc", Pkcs7CertificatesMimeType },
        { "spl", "application/futuresplash".AsMemory() },
        { "src", "application/x-wais-source".AsMemory() },
        { "SSISDeploymentManifest", XmlTextMimeType },
        { "ssm", "application/streamingmedia".AsMemory() },
        { "sst", "application/vnd.ms-pki.certstore".AsMemory() },
        { "stl", "application/vnd.ms-pki.stl".AsMemory() },
        { "sv4cpio", "application/x-sv4cpio".AsMemory() },
        { "sv4crc", "application/x-sv4crc".AsMemory() },
        { "swf", ShockwaveFlashMimeType },
        { "step", StepMimeType },
        { "stp", StepMimeType },
        { "t", TroffFlashMimeType },
        { "tcl", "application/x-tcl".AsMemory() },
        { "tex", "application/x-tex".AsMemory() },
        { "texi", TexInfoMimeType },
        { "texinfo", TexInfoMimeType },
        { "tgz", "application/x-compressed".AsMemory() },
        { "thmx", "application/vnd.ms-officetheme".AsMemory() },
        { "tr", TroffFlashMimeType },
        { "trm", "application/x-msterminal".AsMemory() },
        { "ts", DlnaMpegTtsVideoMimeType },
        { "tsv", "text/tab-separated-values".AsMemory() },
        { "ttf", SfntFlashMimeType },
        { "tts", DlnaMpegTtsVideoMimeType },
        { "uls", "text/iuls".AsMemory() },
        { "ustar", "application/x-ustar".AsMemory() },
        { "vbs", "text/vbscript".AsMemory() },
        { "vcf", "text/x-vcard".AsMemory() },
        { "vdx", "application/vnd.ms-visio.viewer".AsMemory() },
        { "vml", XmlTextMimeType },
        { "vsct", XmlTextMimeType },
        { "vsi", "application/ms-vsi".AsMemory() },
        { "vsix", "application/vsix".AsMemory() },
        { "vsixlangpack", XmlTextMimeType },
        { "vsixmanifest", XmlTextMimeType },
        { "vssettings", XmlTextMimeType },
        { "vstemplate", XmlTextMimeType },
        { "vsto", "application/x-ms-vsto".AsMemory() },
        { "vtt", "text/vtt".AsMemory() },
        { "wasm", "application/wasm".AsMemory() },
        { "wax", "audio/x-ms-wax".AsMemory() },
        { "wbmp", "image/vnd.wap.wbmp".AsMemory() },
        { "wcm", WorksMimeType },
        { "wdb", WorksMimeType },
        { "wdp", "image/vnd.ms-photo".AsMemory() },
        { "webarchive", "application/x-safari-webarchive".AsMemory() },
        { "wks", WorksMimeType },
        { "WLMP", "application/wlmoviemaker".AsMemory() },
        { "wlpginstall", "application/x-wlpg-detect".AsMemory() },
        { "wlpginstall3", "application/x-wlpg3-detect".AsMemory() },
        { "wm", "video/x-ms-wm".AsMemory() },
        { "wma", "audio/x-ms-wma".AsMemory() },
        { "wmd", "application/x-ms-wmd".AsMemory() },
        { "wmf", "application/x-msmetafile".AsMemory() },
        { "wml", "text/vnd.wap.wml".AsMemory() },
        { "wmlc", "application/vnd.wap.wmlc".AsMemory() },
        { "wmls", "text/vnd.wap.wmlscript".AsMemory() },
        { "wmlsc", "application/vnd.wap.wmlscriptc".AsMemory() },
        { "wmp", "video/x-ms-wmp".AsMemory() },
        { "wmv", "video/x-ms-wmv".AsMemory() },
        { "wmx", "video/x-ms-wmx".AsMemory() },
        { "wmz", "application/x-ms-wmz".AsMemory() },
        { "woff", "application/font-woff".AsMemory() },
        { "woff2", "application/font-woff2".AsMemory() },
        { "wpl", "application/vnd.ms-wpl".AsMemory() },
        { "wps", WorksMimeType },
        { "wri", "application/x-mswrite".AsMemory() },
        { "wrl", VrmlWorldMimeType },
        { "wrz", VrmlWorldMimeType },
        { "wsc", ScriptletTextMimeType },
        { "wsdl", XmlTextMimeType },
        { "wvx", "video/x-ms-wvx".AsMemory() },
        { "x", "application/directx".AsMemory() },
        { "xaf", VrmlWorldMimeType },
        { "xaml", "application/xaml+xml".AsMemory() },
        { "xap", "application/x-silverlight-app".AsMemory() },
        { "xbap", "application/x-ms-xbap".AsMemory() },
        { "xbm", "image/x-xbitmap".AsMemory() },
        { "xlam", "application/vnd.ms-excel.addin.macroEnabled.12".AsMemory() },
        { "xlsb", "application/vnd.ms-excel.sheet.binary.macroEnabled.12".AsMemory() },
        { "xlsm", "application/vnd.ms-excel.sheet.macroEnabled.12".AsMemory() },
        { "xltm", "application/vnd.ms-excel.template.macroEnabled.12".AsMemory() },
        { "xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template".AsMemory() },
        { "xml", XmlTextMimeType },
        { "xof", VrmlWorldMimeType },
        { "xpm", "image/x-xpixmap".AsMemory() },
        { "xps", "application/vnd.ms-xpsdocument".AsMemory() },
        { "xrm-ms", XmlTextMimeType },
        { "xsd", XmlTextMimeType },
        { "xsf", XmlTextMimeType },
        { "xsl", XmlTextMimeType },
        { "xslt", XmlTextMimeType },
        { "xspf", "application/xspf+xml".AsMemory() },
        { "xwd", "image/x-xwindowdump".AsMemory() },
        { "z", "application/x-compress".AsMemory() }
    })
    {
    }
    
    public ReadOnlyMemory<char> GetMimeTypeAsMemory(string mimeType)
    {
        ReadOnlyMemory<char> mimeResult;

        if (!Value.TryGetValue(FilterQuery(mimeType), out mimeResult))
            return DefaultMimeType;
        
        return mimeResult;
    }
    
    public bool TryGetMimeTypeAsMemory(string mimeType, out  ReadOnlyMemory<char> mimeResult)
    {
        return Value.TryGetValue(FilterQuery(mimeType), out mimeResult);
    }

    public ReadOnlySpan<char> GetMimeTypeAsSpan(string mimeType) => GetMimeTypeAsMemory(mimeType).Span;

    public bool TryGetMimeTypeAsSpan(string mimeType, out ReadOnlySpan<char> mimeResult)
    {
        try
        {
            ReadOnlyMemory<char> mimeMemoryResult;
            bool result = TryGetMimeTypeAsMemory(mimeType, out mimeMemoryResult);
            mimeResult = mimeMemoryResult.Span;
            return result;
        }
        catch
        {
            mimeResult = string.Empty;
            return false;
        }
    }
    
    public string GetMimeTypeAsString(string mimeType) => GetMimeTypeAsMemory(mimeType).ToString();
    
    public bool TryGetMimeTypeAsString(string mimeType, out string mimeResult)
    {
        try
        {
            ReadOnlySpan<char> mimeMemoryResult;
            bool result = TryGetMimeTypeAsSpan(mimeType, out mimeMemoryResult);
            mimeResult = mimeMemoryResult.ToString();
            return result;
        }
        catch
        {
            mimeResult = string.Empty;
            return false;
        }
    }
    
    private string FilterQuery(string query)
    {
        if (query[0] == '.')
            query = query.Remove(0, 1);

        return query;
    }
}